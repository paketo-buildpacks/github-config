#!/usr/bin/env bash

set -eu
set -o pipefail
shopt -s inherit_errexit

function main() {
  local provided_secrets
  provided_secrets=""

  while [ "${#}" != 0 ]; do
    case "${1}" in
      --secrets)
        provided_secrets="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  args=()

  # If the repository name contains 'full' then we create the stack with
  # the --unbuffered flag to avoid hitting memory limits in github
  # workers
  if [[ "${GITHUB_REPOSITORY}" == *-"full"-* ]]; then
    echo "Full stack detected (${GITHUB_REPOSITORY}): running with --unbuffered flag"
    args+=("--unbuffered")
  else
    echo "Non-full stack detected (${GITHUB_REPOSITORY}): omitting --unbuffered flag"
  fi

  # Assigning a variable to an array in bash splits the variable on
  # whitespace, which includes new lines.
  # Therefore this assignment works whether the string is a single line
  # or multi-line, or even some combination of both (e.g. two secrets on
  # one line and another secret on another line)
  secrets=( ${provided_secrets} )

  for secret in "${secrets[@]}"; do
    args+=("--secret" "${secret}")
  done

  # Ensure other scripts can access the .bin directory to install their own
  # tools after we install them as whatever user we are.
  mkdir -p ./.bin/
  chmod 777 ./.bin/

  ./scripts/create.sh "${args[@]}"
}

main "${@:-}"
