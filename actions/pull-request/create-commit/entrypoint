#!/bin/bash
set -euo pipefail
shopt -s inherit_errexit

function main() {
  local message pathspec committer_name committer_email keyid key
  while [ "${#}" != 0 ]; do
    case "${1}" in
      --message)
        message="${2}"
        shift 2
        ;;

      --pathspec)
        pathspec="${2}"
        shift 2
        ;;

      --committer-name)
        committer_name="${2}"
        shift 2
        ;;

      --committer-email)
        committer_email="${2}"
        shift 2
        ;;

      --keyid)
        keyid="${2}"
        shift 2
        ;;

      --key)
        key="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  git config --global --add safe.directory "${GITHUB_WORKSPACE}"
  if [ -n "$keyid" ] && [ -n "$key" ]; then
    mkdir -p ~/.gnupg/
    printf "quiet" > ~/.gnupg/options
    printf "%s" "$key" | base64 -d > ~/.gnupg/private.key
    gpg --options ~/.gnupg/options --import ~/.gnupg/private.key

    git config --global user.signingkey "$keyid"
    git config --global commit.gpgsign true
  fi

  git config --global user.name "${committer_name}"
  git config --global user.email "${committer_email}"

  if [[ -n "$(git status --short -- "${pathspec}")" ]]; then
    git add --all "${pathspec}"
    git commit --message "${message}"

    echo "commit_sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
    exit 0
  fi
}

main "${@:-}"
