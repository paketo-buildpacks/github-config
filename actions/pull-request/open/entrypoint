#!/bin/bash

set -eu
set -o pipefail

function main() {
  local token title body branch

  while [ "${#}" != 0 ]; do
    case "${1}" in
      --token)
        token="${2}"
        shift 2
        ;;

      --title)
        title="${2}"
        shift 2
        ;;

      --body)
        body="${2}"
        shift 2
        ;;

      --branch)
        branch="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  pr::open "${token}" "${title}" "${body}" "${branch}"
}

function pr::open() {
  local token title body branch org
  token="${1}"
  title="${2}"
  body="${3}"
  branch="${4}"
  org="$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f1)"
  count="$(
    curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls?head=${org}:${branch}" \
      -H "Authorization: token ${token}" \
      --silent \
      | jq -r 'length'
  )"

  if [[ "${count}" != "0" ]]; then
    echo "PR already exists, updated with new commit."
    exit 0
  fi

  echo "${token}" | gh auth login --with-token

  echo "Opening Pull Request"

  pushd "${GITHUB_WORKSPACE}" > /dev/null || true
    gh pr create \
      --title "${title}" \
      --body "${body}"
  popd > /dev/null || true
}

main "${@:-}"
