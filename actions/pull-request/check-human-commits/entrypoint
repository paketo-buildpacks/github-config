#!/bin/bash
set -euo pipefail
shopt -s inherit_errexit

function main() {
  local token repo number botsString

  while [ "${#}" != 0 ]; do
    case "${1}" in
      --token)
        token="${2}"
        shift 2
        ;;

      --repo)
        repo="${2}"
        shift 2
        ;;

      --number)
        number="${2}"
        shift 2
        ;;

      --bots)
        botsString="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  if rules::has_human_commits "${token}" "${repo}" "${number}" "${botsString}"; then
    echo "human_commits=true" >> "$GITHUB_OUTPUT"
    exit 0
  fi
    echo "human_commits=false" >> "$GITHUB_OUTPUT"
}

function rules::has_human_commits() {
  local token repo number
  token="${1}"
  repo="${2}"
  number="${3}"

  IFS="," read -r -a bots <<< "${4}"
  IFS=" " read -r -a committers <<< "$(
    curl "https://api.github.com/repos/${repo}/pulls/${number}/commits" \
      --fail-with-body \
      --show-error \
      --silent \
      --location \
      --header "Authorization: token ${token}" \
      | jq -r '.[] | .author.login, .committer.login' | xargs
  )"
  declare -a unknown=()

  for committer in "${committers[@]}"; do
    # check to see if this login belongs to a bot
    for bot in "${bots[@]}"; do
      if [[ "${committer}" == "${bot}" ]]; then
        continue 2
      fi
    done

    # check to see if this login is on the list of unknowns
    if [[ "${#unknown[@]}" != 0 ]]; then
      for login in "${unknown[@]}"; do
        if [[ "${committer}" == "${login}" ]]; then
          continue 2;
        fi
      done
    fi

    # add this committer to the list of unknowns
    unknown+=("${committer}")
  done

  # if the length of unknown logins is 0, fail the check
  if [[ "${#unknown[@]}" == 0 ]]; then
    return 1
  fi

  echo "human committers: ${unknown[*]}"
  return 0
}

main "${@:-}"
